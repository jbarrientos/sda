@model IEnumerable<SDA.WebApp.ViewModels.IndexSolicitudes>

@{
    ViewBag.Title = "Index";
}

<h2>Solicitudes @ViewBag.detalle.Anio - @ViewBag.tipoContingente.nombre</h2>
<h4>
    <span class="label label-default">
        Total Contingente: @ViewBag.detalle.TotalRecepcion.ToString("###,##0.00") - Total Solicitado: @ViewBag.TotalSolicitado.ToString("###,##0.00") - Total Asignado: @ViewBag.TotalAsignado.ToString("###,##0.00") - Disponible: @ViewBag.TotalDisponible.ToString("###,##0.00")
    </span>
    <hr />
    @*@if (ViewBag.tipoContingente.mecanismoSubasta)
    {
        
            @Html.ActionLink("Nueva Solicitud", "NewSubasta", new { id = ViewBag.detalle.Id },
       new { @class = "btn btn-primary btn-sm" })
        
    }*@
    @Html.ActionLink("Regresar", "Index", "ContingenteVario", new { },
       new { @class = "btn btn-default btn-sm" })
</h4>

<table class="table table-bordered table-hover" id="tabla">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Contribuyente)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VolumenSolicitado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VolumenAsignado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VolumenImportado)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.UnidadMedida)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
            {
            <tr data-id="@item.Id">
                <td>
                    @Html.DisplayFor(modelItem => item.Contribuyente.nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>



                <td style="text-align:right">
                    @Html.DisplayFor(modelItem => item.VolumenSolicitado)
                </td>
                <td style="text-align:right">
                    @Html.DisplayFor(modelItem => item.VolumenAsignado)
                </td>
                <td style="text-align:right">
                    @Html.DisplayFor(modelItem => item.VolumenImportado)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.UnidadMedida.nombre)
                </td>

                <td>
                    @*@Html.ActionLink("Editar", "Edit", new { solicitudId = item.Id }, new { @class = "btn btn-info" })*@
                    @*@Html.ActionLink("Retirar", "RetirarReasignacion", new { solicitudId = item.Id }, new { @class = "btn btn-info" })*@
                    @Html.ActionLink("Licen.", "IndexOtrosContingentes", "Licencia",
                   new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                </td>

                

            </tr>
        }
    </tbody>
</table>
@section scripts{
    <script type="text/javascript" language="javascript" src="//cdn.datatables.net/1.10.11/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" language="javascript" src="//cdn.datatables.net/plug-ins/be7019ee387/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var table = $('#tabla').DataTable({
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por pagina",
                    "zeroRecords": "No se encontro ningun registro - lo sentimos",
                    "info": "Mostrando pagina _PAGE_ de _PAGES_",
                    "infoEmpty": "No hay registros",
                    "infoFiltered": "(filtrado desde _MAX_ total de registros)",
                    "search": "Buscar",
                    "paginate": {
                        "first": "Primero",
                        "last": "Ultimo",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });

            //$("#btnAsignacion").on('click', function (event) {

            //    bootbox.confirm("En realidad desea ejecutar el proceso de Asignación de Contingente?",
            //        function (result) {
            //            if (!result)
            //                event.preventDefault();
            //        });

            //});



            $("#tabla").on("click", ".js-delete", function (e) {
                var button = $(this);


                bootbox.confirm("Por favor confirmar la aprobación de la solicitud No. " +
                    button.attr("data-solicitud-id") + "?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/solicitudes/" + button.attr("data-solicitud-id"),
                                method: "PUT",
                                success: function (data) {

                                    var row = table.row('[data-id="' +
                                        button.attr("data-solicitud-id") + '"]'),
                                        cols = row.data();
                                    //

                                    cols[1] = 'Registrada';
                                    cols[9] = '';


                                    row.data(cols);

                                    toastr.success("Solicitud ha sido aprobada.");
                                }
                            });
                        }
                    });

            });

            //
            $("#btnAsignacion").click(function () {
                var button = $(this);

                bootbox.confirm("En realidad desea realizar el proceso de asignación del contingente @ViewBag.tipoContingente.nombre?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/asignacion/" + button.attr("data-item"),
                            method: "POST",
                            success: function (data) {
                                button.hide();
                                toastr.info("Proceso de Asignación Realizado Exitosamente.");

                            },
                            fail: function () {
                                toastr.error("Ocurrió un error. No se aplicaron los movimientos.");
                            }
                        });
                    }
                });
            });
        });
    </script>
}

